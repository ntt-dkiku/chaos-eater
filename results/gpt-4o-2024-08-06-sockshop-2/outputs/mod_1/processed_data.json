{
    "work_dir": "sandbox/cycle_20241127_030827/inputs",
    "input": {
        "skaffold_yaml": {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/skaffold.yaml",
            "content": "apiVersion: skaffold/v3\nkind: Config\nmetadata:\n  name: sock-shop-app\nmanifests:\n  rawYaml:\n    - manifests/00-sock-shop-ns.yaml\n    - manifests/01-carts-dep.yaml\n    - manifests/02-carts-svc.yaml\n    - manifests/03-carts-db-dep.yaml\n    - manifests/04-carts-db-svc.yaml\n    - manifests/05-catalogue-dep.yaml\n    - manifests/06-catalogue-svc.yaml\n    - manifests/07-catalogue-db-dep.yaml\n    - manifests/08-catalogue-db-svc.yaml\n    - manifests/09-front-end-dep.yaml\n    - manifests/10-front-end-svc.yaml\n    - manifests/11-orders-dep.yaml\n    - manifests/12-orders-svc.yaml\n    - manifests/13-orders-db-dep.yaml\n    - manifests/14-orders-db-svc.yaml\n    - manifests/15-payment-dep.yaml\n    - manifests/16-payment-svc.yaml\n    - manifests/17-queue-master-dep.yaml\n    - manifests/18-queue-master-svc.yaml\n    - manifests/19-rabbitmq-dep.yaml\n    - manifests/20-rabbitmq-svc.yaml\n    - manifests/21-session-db-dep.yaml\n    - manifests/22-session-db-svc.yaml\n    - manifests/23-shipping-dep.yaml\n    - manifests/24-shipping-svc.yaml\n    - manifests/25-user-dep.yaml\n    - manifests/26-user-svc.yaml\n    - manifests/27-user-db-dep.yaml\n    - manifests/28-user-db-svc.yaml",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/skaffold.yaml"
        },
        "files": [
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/21-session-db-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      labels:\n        name: session-db\n      annotations:\n        prometheus.io.scrape: \"false\"\n    spec:\n      containers:\n      - name: session-db\n        image: redis:alpine\n        ports:\n        - name: redis\n          containerPort: 6379\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/21-session-db-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/23-shipping-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin.jaeger.svc.cluster.local\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/23-shipping-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/18-queue-master-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/18-queue-master-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/04-carts-db-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/04-carts-db-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/05-catalogue-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: weaveworksdemos/catalogue:0.3.5\n        command: [\"/app\"]\n        args:\n        - -port=80\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/05-catalogue-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/25-user-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        env:\n        - name: mongo\n          value: user-db:27017\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/25-user-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/12-orders-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/12-orders-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/09-front-end-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - name: front-end\n        image: weaveworksdemos/front-end:0.3.12\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 8079\n        env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/09-front-end-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/19-rabbitmq-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n      annotations:\n        prometheus.io/scrape: \"false\"\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8-management\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n              - DAC_OVERRIDE\n          readOnlyRootFilesystem: true\n      - name: rabbitmq-exporter\n        image: kbudde/rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/19-rabbitmq-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/13-orders-db-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/13-orders-db-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/06-catalogue-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/06-catalogue-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/07-catalogue-db-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: weaveworksdemos/catalogue-db:0.3.0\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/07-catalogue-db-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/24-shipping-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/24-shipping-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/02-carts-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/02-carts-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/22-session-db-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/22-session-db-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/01-carts-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/01-carts-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/28-user-db-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/28-user-db-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/15-payment-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/15-payment-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/10-front-end-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: front-end\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: front-end\n  namespace: sock-shop\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    targetPort: 8079\n    nodePort: 30001\n  selector:\n    name: front-end\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/10-front-end-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/03-carts-db-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - name: carts-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/03-carts-db-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/17-queue-master-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/17-queue-master-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/27-user-db-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: weaveworksdemos/user-db:0.3.0\n\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/27-user-db-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/26-user-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user\n\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/26-user-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/16-payment-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: payment\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/16-payment-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/20-rabbitmq-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  annotations:\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9090'\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    name: rabbitmq\n    targetPort: 5672\n  - port: 9090\n    name: exporter\n    targetPort: exporter\n    protocol: TCP\n  selector:\n    name: rabbitmq\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/20-rabbitmq-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/00-sock-shop-ns.yaml",
                "content": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/00-sock-shop-ns.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/11-orders-dep.yaml",
                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/11-orders-dep.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/08-catalogue-db-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/08-catalogue-db-svc.yaml"
            },
            {
                "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/14-orders-db-svc.yaml",
                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
                "work_dir": "sandbox/cycle_20241127_030827/inputs",
                "fname": "sock-shop-2/manifests/14-orders-db-svc.yaml"
            }
        ],
        "ce_instructions": "- The Chaos-Engineering experiment must be completed within 1 minute.\n\n- When using k6 in steady-state definition, always select a request URL from the following options (other requests are invalid):\n  1. http://front-end.sock-shop.svc.cluster.local/\n  2. http://front-end.sock-shop.svc.cluster.local/catalogue?size=10\n  3. http://front-end.sock-shop.svc.cluster.local/detail.html?id=<ID>\n  Replace <ID> with an available ID: [`03fef6ac-1896-4ce8-bd69-b798f85c6e0b`, `3395a43e-2d88-40de-b95f-e00e1502085b`, `510a0d7e-8e83-4193-b483-e27e09ddc34d`, `808a2de1-1aaa-4c25-a9b9-6612e8f29a38`, `819e1fbf-8b7e-4f6d-811f-693534916a8b`, `837ab141-399e-4c1f-9abc-bace40296bac`, `a0a4f044-b040-410d-8ead-4de0446aec7e`, `d3588630-ad8e-49df-bbd7-3167f7efb246`, `zzz4f044-b040-410d-8ead-4de0446aec7e`]\n  4. http://front-end.sock-shop.svc.cluster.local/category/\n  5. http://front-end.sock-shop.svc.cluster.local/category?tags=<TAG>\n  Replace <TAG> with an available tag: [`magic`, `action`, `blue`, `brown`, `black`, `sport`, `formal`, `red`, `green`, `skin`, `geek`]\n  6. http://front-end.sock-shop.svc.cluster.local/basket.html"
    },
    "k8s_yamls": [
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/00-sock-shop-ns.yaml",
            "content": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/00-sock-shop-ns.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/01-carts-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/01-carts-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/02-carts-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/02-carts-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/03-carts-db-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - name: carts-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/03-carts-db-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/04-carts-db-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/04-carts-db-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/05-catalogue-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: weaveworksdemos/catalogue:0.3.5\n        command: [\"/app\"]\n        args:\n        - -port=80\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/05-catalogue-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/06-catalogue-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/06-catalogue-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/07-catalogue-db-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: weaveworksdemos/catalogue-db:0.3.0\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/07-catalogue-db-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/08-catalogue-db-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/08-catalogue-db-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/09-front-end-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - name: front-end\n        image: weaveworksdemos/front-end:0.3.12\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 8079\n        env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/09-front-end-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/10-front-end-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: front-end\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: front-end\n  namespace: sock-shop\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    targetPort: 8079\n    nodePort: 30001\n  selector:\n    name: front-end\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/10-front-end-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/11-orders-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/11-orders-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/12-orders-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/12-orders-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/13-orders-db-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/13-orders-db-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/14-orders-db-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/14-orders-db-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/15-payment-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/15-payment-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/16-payment-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: payment\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/16-payment-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/17-queue-master-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/17-queue-master-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/18-queue-master-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/18-queue-master-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/19-rabbitmq-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n      annotations:\n        prometheus.io/scrape: \"false\"\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8-management\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n              - DAC_OVERRIDE\n          readOnlyRootFilesystem: true\n      - name: rabbitmq-exporter\n        image: kbudde/rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/19-rabbitmq-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/20-rabbitmq-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  annotations:\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9090'\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    name: rabbitmq\n    targetPort: 5672\n  - port: 9090\n    name: exporter\n    targetPort: exporter\n    protocol: TCP\n  selector:\n    name: rabbitmq\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/20-rabbitmq-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/21-session-db-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      labels:\n        name: session-db\n      annotations:\n        prometheus.io.scrape: \"false\"\n    spec:\n      containers:\n      - name: session-db\n        image: redis:alpine\n        ports:\n        - name: redis\n          containerPort: 6379\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/21-session-db-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/22-session-db-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/22-session-db-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/23-shipping-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin.jaeger.svc.cluster.local\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/23-shipping-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/24-shipping-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/24-shipping-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/25-user-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        env:\n        - name: mongo\n          value: user-db:27017\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/25-user-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/26-user-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user\n\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/26-user-svc.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/27-user-db-dep.yaml",
            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: weaveworksdemos/user-db:0.3.0\n\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/27-user-db-dep.yaml"
        },
        {
            "path": "sandbox/cycle_20241127_030827/inputs/sock-shop-2/manifests/28-user-db-svc.yaml",
            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n\n",
            "work_dir": "sandbox/cycle_20241127_030827/inputs",
            "fname": "sock-shop-2/manifests/28-user-db-svc.yaml"
        }
    ],
    "k8s_summaries": [
        "- This manifest defines a Kubernetes Namespace.\n- The Namespace is named 'sock-shop'.\n- Namespaces are used to organize and manage resources in a Kubernetes cluster.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'carts' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'carts' application running.\n- The Deployment uses the Docker image 'weaveworksdemos/carts:0.4.8'.\n- Environment variables are set for Java options to optimize memory usage and disable certain features.\n- Resource limits and requests are defined, with a maximum of 300m CPU and 500Mi memory, and a minimum of 100m CPU and 200Mi memory.\n- The application listens on port 80 within the container.\n- Security context is configured to run the container as a non-root user with specific capabilities.\n- The root filesystem is set to be read-only for security purposes.\n- A temporary volume is mounted at '/tmp' using an in-memory empty directory.\n- The Deployment is scheduled to run on nodes with the Linux operating system.",
        "- This is a Kubernetes Service manifest.\n- The Service is named 'carts'.\n- It is annotated for Prometheus scraping with 'prometheus.io/scrape: true'.\n- The Service is labeled with 'name: carts'.\n- It is deployed in the 'sock-shop' namespace.\n- The Service exposes port 80 and directs traffic to the same port on the selected pods.\n- It selects pods with the label 'name: carts' to route traffic to.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'carts-db' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'carts-db' pod running.\n- The pods are selected based on the label 'name: carts-db'.\n- Each pod runs a single container using the 'mongo' image.\n- The container exposes port 27017, which is the default port for MongoDB.\n- Security settings are applied to drop all capabilities and add only CHOWN, SETGID, and SETUID.\n- The root filesystem of the container is set to read-only for security purposes.\n- A temporary volume is mounted at '/tmp' using an in-memory emptyDir volume.\n- The pods are scheduled to run on nodes with the operating system labeled as 'linux'.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'carts-db'.\n- It is labeled with 'name: carts-db'.\n- The Service is created in the 'sock-shop' namespace.\n- It exposes port 27017 and directs traffic to the same port on the target pods.\n- The Service selects pods with the label 'name: carts-db' to route traffic to.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'catalogue' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'catalogue' application running.\n- The Deployment uses the Docker image 'weaveworksdemos/catalogue:0.3.5'.\n- The application runs with the command '/app' and listens on port 80.\n- Resource limits are set to 200m CPU and 200Mi memory, with requests for 100m CPU and 100Mi memory.\n- The container runs as a non-root user with user ID 10001 and has a read-only root filesystem.\n- Security settings drop all capabilities except 'NET_BIND_SERVICE'.\n- A liveness probe checks the '/health' endpoint on port 80, starting after 300 seconds and repeating every 3 seconds.\n- A readiness probe also checks the '/health' endpoint on port 80, starting after 180 seconds and repeating every 3 seconds.\n- The Deployment is scheduled to run on nodes with the label 'beta.kubernetes.io/os: linux'.",
        "- This is a Kubernetes Service manifest.\n- The service is named 'catalogue'.\n- It is annotated for Prometheus scraping with 'prometheus.io/scrape: true'.\n- The service is labeled with 'name: catalogue'.\n- It is deployed in the 'sock-shop' namespace.\n- The service exposes port 80 and directs traffic to the same port on the selected pods.\n- It selects pods with the label 'name: catalogue'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'catalogue-db' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'catalogue-db' pod running.\n- The pods are selected based on the label 'name: catalogue-db'.\n- Each pod runs a single container using the image 'weaveworksdemos/catalogue-db:0.3.0'.\n- The container is configured with environment variables for 'MYSQL_ROOT_PASSWORD' and 'MYSQL_DATABASE'.\n- The container exposes port 3306, which is typically used for MySQL databases.\n- The pods are scheduled to run on nodes with the operating system labeled as 'linux'.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'catalogue-db'.\n- It is located in the 'sock-shop' namespace.\n- The Service is configured to expose port 3306.\n- It targets the same port (3306) on the pods it selects.\n- The Service uses a selector to match pods with the label 'name: catalogue-db'.\n- This setup is typically used to provide a stable endpoint for accessing a database running in the cluster.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'front-end' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 1 replica of the front-end application running.\n- The Deployment uses a selector to match pods with the label 'name: front-end'.\n- The pod template includes a single container named 'front-end'.\n- The container uses the image 'weaveworksdemos/front-end:0.3.12'.\n- Resource limits are set for the container: 300m CPU and 1000Mi memory.\n- Resource requests are set for the container: 100m CPU and 300Mi memory.\n- The container exposes port 8079.\n- An environment variable 'SESSION_REDIS' is set to 'true'.\n- Security context is configured to run the container as a non-root user with user ID 10001.\n- All Linux capabilities are dropped, and the root filesystem is set to read-only.\n- A liveness probe is configured to check the '/' path on port 8079, with an initial delay of 300 seconds and a period of 3 seconds.\n- A readiness probe is also configured to check the '/' path on port 8079, with an initial delay of 30 seconds and a period of 3 seconds.\n- The node selector ensures the pod runs on nodes with the operating system labeled as Linux.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'front-end'.\n- It is located in the 'sock-shop' namespace.\n- The Service type is 'NodePort', which exposes the service on each Node's IP at a static port.\n- It listens on port 80 and forwards traffic to target port 8079 on the pods.\n- The nodePort is set to 30001, which is the port on each node where the service can be accessed externally.\n- The Service is configured to be scraped by Prometheus for monitoring, as indicated by the annotation 'prometheus.io/scrape: true'.\n- It uses a selector to target pods with the label 'name: front-end'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'orders' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'orders' application running.\n- The Deployment uses the Docker image 'weaveworksdemos/orders:0.4.7'.\n- Environment variables are set for Java options to optimize memory usage and disable certain features.\n- Resource limits and requests are defined, with a maximum of 500m CPU and 500Mi memory, and a minimum of 100m CPU and 300Mi memory.\n- The application listens on port 80 within the container.\n- Security context is configured to run the container as a non-root user with specific capabilities and a read-only root filesystem.\n- A temporary volume is mounted at '/tmp' using an in-memory empty directory.\n- The Deployment is scheduled to run on nodes with the Linux operating system.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'orders'.\n- It is annotated for Prometheus scraping with 'prometheus.io/scrape: true'.\n- The Service is labeled with 'name: orders'.\n- It is deployed in the 'sock-shop' namespace.\n- The Service exposes port 80 and directs traffic to the same port on the target pods.\n- It uses a selector to match pods with the label 'name: orders'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'orders-db' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'orders-db' pod running.\n- The pods are selected based on the label 'name: orders-db'.\n- Each pod runs a single container using the 'mongo' image.\n- The container exposes port 27017, which is the default port for MongoDB.\n- Security settings are applied to drop all capabilities and add specific ones like CHOWN, SETGID, and SETUID.\n- The root filesystem of the container is set to be read-only for security purposes.\n- A temporary volume is mounted at '/tmp' using an in-memory emptyDir volume.\n- The pods are scheduled to run on nodes with the operating system labeled as 'linux'.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'orders-db'.\n- It is located in the 'sock-shop' namespace.\n- The Service is configured to expose port 27017.\n- It targets the same port (27017) on the pods.\n- The Service selects pods with the label 'name: orders-db'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'payment' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'payment' application running.\n- The Deployment uses the Docker image 'weaveworksdemos/payment:0.4.3'.\n- Resource limits are set for the containers: 200m CPU and 200Mi memory.\n- Resource requests are set for the containers: 99m CPU and 100Mi memory.\n- The container exposes port 80.\n- Security context is configured to run the container as a non-root user with user ID 10001.\n- All capabilities are dropped except 'NET_BIND_SERVICE', and the root filesystem is set to read-only.\n- A liveness probe is configured to check the '/health' endpoint on port 80, starting after 300 seconds and checking every 3 seconds.\n- A readiness probe is also configured to check the '/health' endpoint on port 80, starting after 180 seconds and checking every 3 seconds.\n- The Deployment is scheduled to run on nodes with the operating system labeled as Linux.",
        "- This is a Kubernetes Service manifest.\n- The service is named 'payment'.\n- It is annotated for Prometheus scraping with 'prometheus.io/scrape: true'.\n- The service is labeled with 'name: payment'.\n- It is deployed in the 'sock-shop' namespace.\n- The service exposes port 80 and directs traffic to the same port on the selected pods.\n- It selects pods with the label 'name: payment'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'queue-master' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'queue-master' pod running.\n- The pods are selected based on the label 'name: queue-master'.\n- Each pod runs a single container using the image 'weaveworksdemos/queue-master:0.3.1'.\n- The container is configured with specific Java options through environment variables.\n- Resource limits are set for the container, with a maximum of 300m CPU and 500Mi memory, and requests for 100m CPU and 300Mi memory.\n- The container exposes port 80.\n- The pods are scheduled on nodes with the operating system labeled as 'linux'.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'queue-master'.\n- It is annotated to enable Prometheus scraping with 'prometheus.io/scrape: true'.\n- The Service is labeled with 'name: queue-master'.\n- It is deployed in the 'sock-shop' namespace.\n- The Service exposes port 80 and directs traffic to the same port on the selected pods.\n- It selects pods with the label 'name: queue-master' to route traffic to.",
        "- This manifest defines a Deployment for RabbitMQ in Kubernetes.\n- The Deployment is named 'rabbitmq' and is located in the 'sock-shop' namespace.\n- It specifies 2 replicas, meaning there will be 2 instances of RabbitMQ running.\n- The Deployment uses a label 'name: rabbitmq' to manage its pods.\n- The RabbitMQ container uses the image 'rabbitmq:3.6.8-management'.\n- It exposes two ports: 15672 for management and 5672 for RabbitMQ communication.\n- Security settings drop all capabilities but add CHOWN, SETGID, SETUID, and DAC_OVERRIDE, and the root filesystem is set to read-only.\n- An additional container, 'rabbitmq-exporter', is included for monitoring purposes, using the 'kbudde/rabbitmq-exporter' image and exposing port 9090.\n- The Deployment is configured to run on nodes with the Linux operating system.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'rabbitmq'.\n- It is annotated for Prometheus scraping on port 9090.\n- The Service is located in the 'sock-shop' namespace.\n- It exposes two ports: 5672 for RabbitMQ and 9090 for an exporter.\n- The Service uses TCP protocol for communication.\n- It selects pods with the label 'name: rabbitmq' to route traffic to.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'session-db' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'session-db' pod running.\n- The pods are selected based on the label 'name: session-db'.\n- Each pod runs a single container using the 'redis:alpine' image.\n- The container exposes port 6379, which is commonly used by Redis.\n- Security settings are applied to drop all capabilities and only add CHOWN, SETGID, and SETUID.\n- The root filesystem of the container is set to be read-only for security purposes.\n- The pods are scheduled to run on nodes with the operating system labeled as Linux.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'session-db'.\n- It is located in the 'sock-shop' namespace.\n- The Service is configured to expose port 6379.\n- It targets the same port (6379) on the selected pods.\n- The Service uses a selector to match pods with the label 'name: session-db'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'shipping' and is located in the 'sock-shop' namespace.\n- It specifies 2 replicas of the 'shipping' application to be run.\n- The Deployment uses the Docker image 'weaveworksdemos/shipping:0.4.8'.\n- Environment variables are set for the application, including 'ZIPKIN' and 'JAVA_OPTS'.\n- Resource limits and requests are defined, with CPU limits at 300m and memory limits at 500Mi, and requests at 100m CPU and 300Mi memory.\n- The application listens on port 80 within the container.\n- Security context is configured to run the container as a non-root user with user ID 10001, and it drops all capabilities except 'NET_BIND_SERVICE'.\n- The root filesystem is set to be read-only.\n- A temporary volume is mounted at '/tmp' using an in-memory emptyDir volume.\n- The Deployment is scheduled to run on nodes with the label 'beta.kubernetes.io/os: linux'.",
        "- This is a Kubernetes Service manifest.\n- The service is named 'shipping'.\n- It is annotated for Prometheus scraping with 'prometheus.io/scrape: true'.\n- The service is labeled with 'name: shipping'.\n- It is deployed in the 'sock-shop' namespace.\n- The service exposes port 80 and directs traffic to the same port on the selected pods.\n- It selects pods with the label 'name: shipping' to route traffic to.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'user' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'user' application running.\n- The Deployment uses the Docker image 'weaveworksdemos/user:0.4.7'.\n- Resource limits are set for the container: 300m CPU and 200Mi memory, with requests for 100m CPU and 100Mi memory.\n- The container listens on port 80.\n- An environment variable 'mongo' is set with the value 'user-db:27017'.\n- Security context is configured to run the container as a non-root user with user ID 10001.\n- The container has a read-only root filesystem and drops all capabilities except 'NET_BIND_SERVICE'.\n- Liveness and readiness probes are configured to check the '/health' endpoint on port 80, with initial delays of 300 and 180 seconds, respectively.\n- The Deployment is scheduled to run on nodes with the Linux operating system.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'user'.\n- It is annotated for Prometheus scraping with 'prometheus.io/scrape: true'.\n- The Service is labeled with 'name: user'.\n- It is deployed in the 'sock-shop' namespace.\n- The Service exposes port 80 and directs traffic to the same port on the selected pods.\n- It uses a selector to target pods with the label 'name: user'.",
        "- This manifest defines a Deployment in Kubernetes.\n- The Deployment is named 'user-db' and is located in the 'sock-shop' namespace.\n- It specifies that there should be 2 replicas of the 'user-db' pod running.\n- The pods are labeled with 'name: user-db' for identification and selection.\n- Each pod runs a single container using the image 'weaveworksdemos/user-db:0.3.0'.\n- The container exposes port 27017, which is typically used by MongoDB.\n- Security settings are applied to drop all capabilities and only add CHOWN, SETGID, and SETUID.\n- The root filesystem of the container is set to be read-only for security purposes.\n- A temporary volume is mounted at '/tmp' using an in-memory emptyDir volume.\n- The pods are scheduled to run on nodes with the operating system labeled as Linux.",
        "- This manifest defines a Kubernetes Service.\n- The Service is named 'user-db'.\n- It is located in the 'sock-shop' namespace.\n- The Service is configured to expose port 27017.\n- It targets the same port (27017) on the pods it selects.\n- The Service uses a selector to match pods with the label 'name: user-db'."
    ],
    "k8s_weakness_summary": "Issue #0: Missing Port Configuration\n  - details: The service does not specify the port it should serve on, which can lead to connectivity issues.\n  - manifests having the issues: ['sock-shop-2/manifests/02-carts-svc.yaml', 'sock-shop-2/manifests/04-carts-db-svc.yaml', 'sock-shop-2/manifests/06-catalogue-svc.yaml', 'sock-shop-2/manifests/08-catalogue-db-svc.yaml', 'sock-shop-2/manifests/12-orders-svc.yaml', 'sock-shop-2/manifests/14-orders-db-svc.yaml', 'sock-shop-2/manifests/16-payment-svc.yaml', 'sock-shop-2/manifests/18-queue-master-svc.yaml', 'sock-shop-2/manifests/22-session-db-svc.yaml', 'sock-shop-2/manifests/24-shipping-svc.yaml', 'sock-shop-2/manifests/26-user-svc.yaml', 'sock-shop-2/manifests/28-user-db-svc.yaml']\n  - problematic config: The 'ports' field in the Service spec is missing the 'port' configuration.\n\nIssue #1: Single Replica Deployment\n  - details: Having a single replica for a deployment can lead to downtime if the pod fails.\n  - manifests having the issues: ['sock-shop-2/manifests/09-front-end-dep.yaml']\n  - problematic config: The 'replicas' field is set to 1.\n\nIssue #2: High Initial Delay for Liveness Probe\n  - details: A high initial delay for the liveness probe can delay the detection of a non-responsive application.\n  - manifests having the issues: ['sock-shop-2/manifests/05-catalogue-dep.yaml', 'sock-shop-2/manifests/09-front-end-dep.yaml', 'sock-shop-2/manifests/15-payment-dep.yaml', 'sock-shop-2/manifests/25-user-dep.yaml']\n  - problematic config: The 'initialDelaySeconds' for the liveness probe is set to 300.\n\nIssue #3: High Initial Delay for Readiness Probe\n  - details: A high initial delay for the readiness probe can delay the application from being marked as ready, affecting service availability.\n  - manifests having the issues: ['sock-shop-2/manifests/05-catalogue-dep.yaml', 'sock-shop-2/manifests/15-payment-dep.yaml', 'sock-shop-2/manifests/25-user-dep.yaml']\n  - problematic config: The 'initialDelaySeconds' for the readiness probe is set to 180.\n\n",
    "k8s_app": {
        "thought": "The manifests provided are part of a well-known microservices demo application called 'Sock Shop'. This application is designed to demonstrate the use of microservices architecture and Kubernetes orchestration. The file names, labels, and images used in the manifests (e.g., 'weaveworksdemos') are indicative of the Sock Shop application, which simulates an e-commerce website for selling socks. The application includes various services such as carts, catalogue, orders, payment, and user management, each with its own database and service components, reflecting a typical e-commerce platform's architecture.",
        "k8s_application": "Sock Shop is an e-commerce application that simulates an online sock store. It offers users the ability to browse a catalogue of socks, add items to a cart, place orders, and manage user accounts. The application is composed of multiple microservices, each responsible for a specific function within the e-commerce workflow, such as handling orders, managing user sessions, and processing payments."
    },
    "ce_instructions": "- The Chaos-Engineering experiment must be completed within 1 minute.\n\n- When using k6 in steady-state definition, always select a request URL from the following options (other requests are invalid):\n  1. http://front-end.sock-shop.svc.cluster.local/\n  2. http://front-end.sock-shop.svc.cluster.local/catalogue?size=10\n  3. http://front-end.sock-shop.svc.cluster.local/detail.html?id=<ID>\n  Replace <ID> with an available ID: [`03fef6ac-1896-4ce8-bd69-b798f85c6e0b`, `3395a43e-2d88-40de-b95f-e00e1502085b`, `510a0d7e-8e83-4193-b483-e27e09ddc34d`, `808a2de1-1aaa-4c25-a9b9-6612e8f29a38`, `819e1fbf-8b7e-4f6d-811f-693534916a8b`, `837ab141-399e-4c1f-9abc-bace40296bac`, `a0a4f044-b040-410d-8ead-4de0446aec7e`, `d3588630-ad8e-49df-bbd7-3167f7efb246`, `zzz4f044-b040-410d-8ead-4de0446aec7e`]\n  4. http://front-end.sock-shop.svc.cluster.local/category/\n  5. http://front-end.sock-shop.svc.cluster.local/category?tags=<TAG>\n  Replace <TAG> with an available tag: [`magic`, `action`, `blue`, `brown`, `black`, `sport`, `formal`, `red`, `green`, `skin`, `geek`]\n  6. http://front-end.sock-shop.svc.cluster.local/basket.html"
}