{
    "event": "Black Friday Sale",
    "faults": [
        [
            {
                "name": "StressChaos",
                "name_id": 0,
                "params": {
                    "mode": "all",
                    "selector": {
                        "namespaces": [
                            "sock-shop"
                        ],
                        "labelSelectors": {
                            "name": "carts-db"
                        }
                    },
                    "stressors": {
                        "cpu": {
                            "workers": 2,
                            "load": 100
                        },
                        "memory": {
                            "workers": 2,
                            "size": "256MB"
                        }
                    },
                    "containerNames": [
                        "carts-db"
                    ]
                }
            }
        ],
        [
            {
                "name": "PodChaos",
                "name_id": 1,
                "params": {
                    "action": "pod-kill",
                    "mode": "one",
                    "selector": {
                        "namespaces": [
                            "sock-shop"
                        ],
                        "labelSelectors": {
                            "name": "front-end"
                        }
                    }
                }
            }
        ]
    ],
    "description": "During a Black Friday sale, the system is expected to handle a significant increase in traffic and load. This event will test the system's ability to maintain steady states under high demand. The primary weaknesses identified are missing resource requests for critical database components and a single replica for the front-end service. These weaknesses could lead to resource contention and downtime, respectively. To simulate the Black Friday event, we will first inject a StressChaos to simulate high CPU and memory usage on the 'carts-db' deployment, which lacks resource requests. This will test if the system can maintain the 'carts-db-replicas' steady state under resource pressure. Next, we will inject a PodChaos to kill the single replica of the 'front-end' deployment to test if the system can maintain the 'front-end-replicas' steady state and recover quickly. This sequence simulates the phenomena of high demand and potential failures during a Black Friday sale, targeting the system's identified weaknesses."
}