{
    "event": "Cyber Attack Simulation",
    "faults": [
        [
            {
                "name": "PodChaos",
                "name_id": 0,
                "params": {
                    "action": "pod-kill",
                    "mode": "one",
                    "selector": {
                        "namespaces": [
                            "default"
                        ],
                        "labelSelectors": {
                            "app": "example"
                        }
                    }
                }
            }
        ],
        [
            {
                "name": "NetworkChaos",
                "name_id": 1,
                "params": {
                    "action": "delay",
                    "direction": "to",
                    "mode": "all",
                    "selector": {
                        "namespaces": [
                            "default"
                        ],
                        "labelSelectors": {
                            "app": "example"
                        }
                    },
                    "delay": {
                        "latency": "100ms",
                        "jitter": "10ms"
                    }
                }
            }
        ]
    ],
    "description": "Given the system's weaknesses, a cyber attack simulation can be impactful. The system has a single Pod with a 'Never' restart policy, making it vulnerable to downtime if the Pod fails. Additionally, the lack of redundancy means that any failure in the Pod will directly affect the service availability. To simulate a cyber attack, we can start by injecting a 'PodChaos' fault to kill the Pod, testing the system's ability to maintain the 'example-pod-running' steady state. This will reveal the impact of the Pod's restart policy and lack of redundancy. Next, we can inject a 'NetworkChaos' fault to introduce network latency, simulating a DDoS attack, and testing the 'example-service-availability' steady state. This will reveal how the system handles network disruptions and whether the service can maintain a high success rate under stress. The sequence of injecting Pod failure first, followed by network latency, simulates a scenario where an attacker first disrupts the Pod and then targets the network, maximizing the impact on the system."
}